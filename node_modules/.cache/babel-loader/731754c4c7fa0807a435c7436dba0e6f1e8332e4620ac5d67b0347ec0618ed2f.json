{"ast":null,"code":"var _jsxFileName = \"/Users/shrutisrivastava/Desktop/Youtube/youtube-clone/src/components/LiveChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatMessage from './ChatMessage';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage } from '../utils/chatSlice';\nimport { getRandomName, makeRandomMessage } from '../utils/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LiveChat = () => {\n  _s();\n  const [liveMessage, setLiveMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const chatMessage = useSelector(store => store.chat.messages);\n  useEffect(() => {\n    const i = setInterval(() => {\n      // API poling\n      console.log(\"API poling \");\n      dispatch(addMessage({\n        name: getRandomName(),\n        message: makeRandomMessage(20)\n      }));\n    }, 2000);\n    return () => clearInterval(i);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 ml-2 w-500 h-[600px] border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: chatMessage.map((c, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          name: c.name,\n          message: c.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \" w-full p-2 m-2  border border-black-100 flex \",\n      onSubmit: e => {\n        e.preventDefault();\n        console.log(\"On_Form_Submit\");\n        dispatch(addMessage({\n          name: \"akshay\",\n          message: liveMessage\n        }));\n        setLiveMessage(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \" w-70\",\n        type: \"text\",\n        value: liveMessage,\n        onChange: e => {\n          setLiveMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" px-2 m-2 bg-green-50\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(LiveChat, \"ZIcXmpHaUsXEmy+kBjQdE9F2Zdc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LiveChat;\nexport default LiveChat;\nvar _c;\n$RefreshReg$(_c, \"LiveChat\");","map":{"version":3,"names":["React","useState","ChatMessage","useEffect","useDispatch","useSelector","addMessage","getRandomName","makeRandomMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","LiveChat","_s","liveMessage","setLiveMessage","dispatch","chatMessage","store","chat","messages","i","setInterval","console","log","name","message","clearInterval","children","className","map","c","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/shrutisrivastava/Desktop/Youtube/youtube-clone/src/components/LiveChat.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ChatMessage from './ChatMessage'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addMessage } from '../utils/chatSlice'\nimport { getRandomName, makeRandomMessage } from '../utils/helper'\n\n\nconst LiveChat = () => {\n  const [liveMessage, setLiveMessage]= useState(\"\");\n    const dispatch= useDispatch();\n    const chatMessage= useSelector((store)=>store.chat.messages)\n    useEffect(()=>{\n       const i= setInterval(()=>{\n// API poling\nconsole.log(\"API poling \")\ndispatch(addMessage({\n    name: getRandomName(),\n    message:makeRandomMessage(20)\n\n}))\n        },2000);\n        return ()=>clearInterval(i);\n    },[])\n  return (\n    <>\n    <div className=\"p-2 ml-2 w-500 h-[600px] border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\">\n   <div>\n    \n{chatMessage.map((c,index)=>  <ChatMessage key ={ index}name={c.name} message={c.message}/>)}\n    </div>\n\n   </div>\n   <form className=\" w-full p-2 m-2  border border-black-100 flex \" onSubmit={((e)=>{\n    e.preventDefault();\n    console.log(\"On_Form_Submit\")\n    dispatch(addMessage({\n      name: \"akshay\",\n      message: liveMessage\n    }))\n    setLiveMessage(\"\")\n   })}>\n  <input className=\" w-70\"type='text' value={liveMessage} onChange={(e)=>{\n    setLiveMessage(e.target.value\n      );\n  }}/>\n  <button className=\" px-2 m-2 bg-green-50\">send</button>\n</form>\n   </>\n  )\n}\n\nexport default LiveChat\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAEf,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAMgB,QAAQ,GAAEb,WAAW,CAAC,CAAC;EAC7B,MAAMc,WAAW,GAAEb,WAAW,CAAEc,KAAK,IAAGA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC;EAC5DlB,SAAS,CAAC,MAAI;IACX,MAAMmB,CAAC,GAAEC,WAAW,CAAC,MAAI;MAChC;MACAC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BR,QAAQ,CAACX,UAAU,CAAC;QAChBoB,IAAI,EAAEnB,aAAa,CAAC,CAAC;QACrBoB,OAAO,EAACnB,iBAAiB,CAAC,EAAE;MAEhC,CAAC,CAAC,CAAC;IACK,CAAC,EAAC,IAAI,CAAC;IACP,OAAO,MAAIoB,aAAa,CAACN,CAAC,CAAC;EAC/B,CAAC,EAAC,EAAE,CAAC;EACP,oBACEZ,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA;MAAKoB,SAAS,EAAC,8GAA8G;MAAAD,QAAA,eAC9HnB,OAAA;QAAAmB,QAAA,EAEFX,WAAW,CAACa,GAAG,CAAC,CAACC,CAAC,EAACC,KAAK,kBAAKvB,OAAA,CAACR,WAAW;UAAcwB,IAAI,EAAEM,CAAC,CAACN,IAAK;UAACC,OAAO,EAAEK,CAAC,CAACL;QAAQ,GAAvCM,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC,eACN3B,OAAA;MAAMoB,SAAS,EAAC,gDAAgD;MAACQ,QAAQ,EAAIC,CAAC,IAAG;QAChFA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClBhB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7BR,QAAQ,CAACX,UAAU,CAAC;UAClBoB,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAEZ;QACX,CAAC,CAAC,CAAC;QACHC,cAAc,CAAC,EAAE,CAAC;MACnB,CAAG;MAAAa,QAAA,gBACJnB,OAAA;QAAOoB,SAAS,EAAC,OAAO;QAAAW,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE3B,WAAY;QAAC4B,QAAQ,EAAGJ,CAAC,IAAG;UACrEvB,cAAc,CAACuB,CAAC,CAACK,MAAM,CAACF,KACtB,CAAC;QACL;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACJ3B,OAAA;QAAQoB,SAAS,EAAC,uBAAuB;QAAAD,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA,eACF,CAAC;AAEN,CAAC;AAAAvB,EAAA,CA1CKD,QAAQ;EAAA,QAEMT,WAAW,EACRC,WAAW;AAAA;AAAAwC,EAAA,GAH5BhC,QAAQ;AA4Cd,eAAeA,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}