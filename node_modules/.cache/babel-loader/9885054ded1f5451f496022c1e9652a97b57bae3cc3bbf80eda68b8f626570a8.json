{"ast":null,"code":"var _jsxFileName = \"/Users/shrutisrivastava/Desktop/Youtube/youtube-clone/src/components/WatchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { closeMenu } from '../utils/appSlice';\nimport { useDispatch } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport CommentContainer from './CommentContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchPage = () => {\n  _s();\n  const [searchParam] = useSearchParams();\n  console.log(searchParam.get(\"v\"));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(closeMenu());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"1300\",\n      height: \"500\",\n      src: \"https://www.youtube.com/embed/\" + searchParam.get(\"v\"),\n      title: \"YouTube video player\",\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(CommentContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(WatchPage, \"nlt+hqZJyDD6K2+ImHwWhbE6m3c=\", false, function () {\n  return [useSearchParams, useDispatch];\n});\n_c = WatchPage;\nexport default WatchPage;\nvar _c;\n$RefreshReg$(_c, \"WatchPage\");","map":{"version":3,"names":["React","useEffect","closeMenu","useDispatch","useSearchParams","CommentContainer","jsxDEV","_jsxDEV","WatchPage","_s","searchParam","console","log","get","dispatch","className","children","width","height","src","title","frameBorder","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shrutisrivastava/Desktop/Youtube/youtube-clone/src/components/WatchPage.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { closeMenu } from '../utils/appSlice';\nimport { useDispatch } from 'react-redux'\nimport { useSearchParams } from 'react-router-dom';\nimport CommentContainer from './CommentContainer';\n\nconst WatchPage = () => {\n    const [searchParam]= useSearchParams()\n    console.log(searchParam.get(\"v\"))\n    const dispatch = useDispatch();\n    useEffect(()=>{\ndispatch(closeMenu())\n    },[])\n  return (\n    <div className=\"px-5\">\n  <iframe width=\"1300\" height=\"500\" src={\"https://www.youtube.com/embed/\"+searchParam.get(\"v\")} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\n    <CommentContainer/>\n    </div>\n  )\n}\n\nexport default WatchPage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,CAAC,GAAEN,eAAe,CAAC,CAAC;EACtCO,OAAO,CAACC,GAAG,CAACF,WAAW,CAACG,GAAG,CAAC,GAAG,CAAC,CAAC;EACjC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAI;IAClBa,QAAQ,CAACZ,SAAS,CAAC,CAAC,CAAC;EACjB,CAAC,EAAC,EAAE,CAAC;EACP,oBACEK,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACvBT,OAAA;MAAQU,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,KAAK;MAACC,GAAG,EAAE,gCAAgC,GAACT,WAAW,CAACG,GAAG,CAAC,GAAG,CAAE;MAACO,KAAK,EAAC,sBAAsB;MAACC,WAAW,EAAC,GAAG;MAACC,KAAK,EAAC,qGAAqG;MAACC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC9QpB,OAAA,CAACF,gBAAgB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAbKD,SAAS;EAAA,QACUJ,eAAe,EAEnBD,WAAW;AAAA;AAAAyB,EAAA,GAH1BpB,SAAS;AAef,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}